.markdown-node {
  object-fit: contain;
  width: 100%;
  height: 100%;
  align-content: center;
  vertical-align: middle;
  overflow: hidden;
  font-family: "Source Sans Pro", Arial, Helvetica, sans-serif;
}

.react-flow__node:has(*>.markdown-node-plot) {
  /* white inner border, black outer border */
  box-shadow:
    inset 0 0 0 1px white,
    inset 0 0 0 2px black,
    0 0 0 1px white,
    0 0 0 2px black;
}

.markdown-node>p {
  margin: 0rem;
  margin-top: 0.5rem;
  padding: 0;
}

.markdown-node>pre {
  padding: 0.5rem;
}

.markdown-node>img {
  margin: 0;
  padding: 0;
}

pre {
  text-align: left;
  overflow: hidden;
}

:root {
  --color-canvas-default: #ffffff;
  --color-canvas-subtle: #f6f8fa;
  --color-border-default: #d0d7de;
  --color-border-muted: hsla(210, 18%, 87%, 1);
}

table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  margin-top: 0;
  margin-bottom: 16px;
  width: max-content;
  max-width: 100%;
  overflow: auto;
}

tr {
  background-color: var(--color-canvas-default);
  border-top: 1px solid var(--color-border-muted);
}

tr:nth-child(2n) {
  background-color: var(--color-canvas-subtle);
}

td,
th {
  padding: 6px 13px;
  border: 1px solid var(--color-border-default);
}

th {
  font-weight: 600;
}

table img {
  background-color: transparent;
}


.react-flow__node-resizer {
  border-radius: 0;
  border: none;
}

.react-flow__resize-control.handle {
  background-color: #ffffff;
  border-color: #9e86ed;
  border-radius: 0;
  width: 9px;
  height: 9px;
}

.react-flow__handle {
  position: absolute;
  pointer-events: none;
  min-width: 11px;
  min-height: 11px;
  width: 11px;
  height: 11px;
  background: white;
  border: 1px solid #1a192b;
  border-radius: 100%;
}

.output-handle {
  position: absolute;
  pointer-events: none;
  min-width: 1px;
  min-height: 1px;
  width: 1px;
  height: 1px;
  background: transparent;
  border: transparent
}


.react-flow__handle-bottom {
  top: auto;
  left: 50%;
  bottom: -6px;
  transform: translate(-50%, 0);
}

.react-flow__handle-top {
  left: 50%;
  top: -6px;
  transform: translate(-50%, 0);
}

.react-flow__handle-left {
  top: 50%;
  left: -1px;
  transform: translate(0, -50%);
}

.react-flow__handle-right {
  right: -1px;
  top: 50%;
  transform: translate(0, -50%);
}



.react-flow__node-output {
  padding: 0px !important
}

.react-flow__node-input {
  border-radius: 50%;
}

@keyframes pulse-animation {
  0% {
    transform: scale(1);
    opacity: 1;
  }

  50% {
    transform: scale(1);
    opacity: 0.2;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.blinking-text {
  position: absolute;
  left: 0px;
  top: -0.8rem;
  transform: translateX(-50%);
  white-space: nowrap;
  font-size: 0.75em;
  animation: pulse-animation 1.5s ease-in-out infinite;
  pointer-events: none;
  /* so it doesn't block connections */
  font-family: "Source Sans Pro", Arial, Helvetica, sans-serif;
  font-weight: 400;
}

.markdown-node-wrapper {
  position: relative;
  overflow: hidden;
}


/* when data.kind === 'plot', add a double border */
.markdown-node-wrapper--double-border {
  border: 2px solid #333;
}

.markdown-node-wrapper--double-border::after {
  content: "";
  position: absolute;
  top: 4px;
  left: 4px;
  right: 4px;
  bottom: 4px;
  border: 1px solid #333;
  pointer-events: none;
}

.btn-divider {
  height: 5px;
  width: 100%;
  background-color: #ccc;
  align-self: stretch;
}

.reactflow {
  position: relative;
}

.markdown-node-hover-container {
  display: inline-block;
  /* or flex/block depending on your layout */
  width: 100%;
  height: 100%;
  ;

}

.node-popup-overlay {
  position: absolute;
  top: 65px;
  left: 1%;
  width: 98%;
  height: 600px;
  background: rgba(255, 255, 255, 0.97);
  border: 1px solid #ccc;
  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.2);
  z-index: 9999;
  overflow: auto;
  padding: 16px;
  box-sizing: border-box;
  cursor: pointer;
}



.react-flow__node-custominput {
  background: #fff
}

.react-flow__handle.connecting {
  background: #ff6060
}

.react-flow__handle.valid {
  background: #5d9
}

/* position the lock icon */
.lock-icon {
  position: absolute;
  top: 2px;
  right: 2px;
  font-size: 0.8em;
  /* tweak to taste */
  color: rgba(0, 0, 0, 0.6);
  /* or any color you like */
  z-index: 10;
  cursor: default;
}

.html-popup-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 999;
}

.html-popup-content {
  background: white;
  padding: 1rem;
  border-radius: 4px;
  width: 80%;
  height: 80%;
  overflow: auto;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}





/* -----------------------------------------------------------
   Base container for CodeHilite (typical) 
   ----------------------------------------------------------- */
.codehilite,
.highlight {
  background-color: #F8F9FB;
  /* Default text color (e.g., gray20-ish) */
  font-family: "Source Code Pro", monospace;
  line-height: 1.5;
  padding: 0.5rem;
  margin-bottom: 0.5rem;;
  overflow: auto;
  /* padding: 1rem; */
  border-radius: 4px;
}

/* If your line numbering is output inside .linenos or .linenodiv */
.codehilite .linenos,
.codehilite .linenodiv {
  color: #a3a8b8;
  /* was "fadedText40" or something similar */
  text-align: right;
  padding-right: 0.75rem;
  user-select: none;
}

/* If you inject each line number with a class like ".linenumber" */
.codehilite .linenumber {
  color: #a3a8b8;
  align-self: center;
  min-width: 2.5rem !important;
  /* approximate "theme.spacing.threeXL" */
  display: inline-block;
}


/* -----------------------------------------------------------
       Any normal/unclassified text => .n
       ----------------------------------------------------------- */
.codehilite .n {
  color: #31333F;
  /* Force default color for normal text to rgb(49,51,63) */
}


/* -----------------------------------------------------------
       Comments, docstrings, etc. 
       (Pygments commonly uses the "c" family)
       ----------------------------------------------------------- */
.codehilite .c {
  /* generic comment */
  color: #808495;
  /* gray70 */
  font-style: italic;
}

/* -----------------------------------------------------------
       Punctuation, operators, etc. 
       Pygments often uses "." for punctuation, "." for operators
       ----------------------------------------------------------- */
.codehilite .p {
  /* punctuation */
  color: #808495;
  /* same as comment punctuation if you wish */
}

.codehilite .o {
  /* operator */
  color: #ed6f13;
  /* orange90 */
}

/* -----------------------------------------------------------
       Namespaces, properties, and variables can map to .na, .nt, .nv
       ----------------------------------------------------------- */
.codehilite .na {
  /* attribute names, namespaces, etc. */
  color: #00a4d4;
  /* lightBlue80 */
  opacity: 0.7;
  /* if you still want that subtle fade */
}

.codehilite .nt {
  /* tag names, property names */
  color: #00a4d4;
  opacity: 0.7;
}

.codehilite .nv {
  /* variable names */
  color: #00a4d4;
  opacity: 0.7;
}

/* -----------------------------------------------------------
       Keywords, booleans, constants, symbols 
       (.k family covers all keywords)
       ----------------------------------------------------------- */
.codehilite .k {
  /* keyword */
  color: #1c83e1;
  /* blue70 */
  /* font-weight: 800;  extrabold */
}

.codehilite .kc,
/* keyword.constant */
.codehilite .kd,
/* keyword.declaration */
.codehilite .kn,
/* keyword.namespace */
.codehilite .kp,
/* keyword.pseudo */
.codehilite .kr,
/* keyword.reserved */
.codehilite .kt {
  /* keyword.type */
  color: #1c83e1;
  /* font-weight: 800; */
}

.codehilite .bp {
  /* builtins, sometimes appear as booleans in some lexers */
  color: #1c83e1;
}

/* Booleans, constants, symbols can also appear as .kc, .kc, .nl, etc. */
.codehilite .kc {
  color: #21c354;
}

/* if you want constants green70 */
.codehilite .kt {
  color: #21c354;
}

/* -----------------------------------------------------------
       Numbers and regex 
       (.m typically for numbers, .sr for regex)
       ----------------------------------------------------------- */
.codehilite .m,
.codehilite .mi,
.codehilite .mb,
.codehilite .mf,
.codehilite .il {
  /* number */
  color: #09ab3b;
  /* blueGreen80 or another color you prefer */
}

.codehilite .sr {
  /* regex in some lexers */
  color: #09ab3b;
}

/* -----------------------------------------------------------
       Strings, chars, attribute values
       (.s and sub-classes: .s1, .s2, .se, .sc, .ss, etc.)
       ----------------------------------------------------------- */
.codehilite .s {
  /* generic string */
  color: #09ab3b;
  /* or #7defa1, depending on the brightness you like */
}

.codehilite .s1,
.codehilite .s2,
.codehilite .sc,
.codehilite .ss {
  color: #09ab3b;
}

/* -----------------------------------------------------------
       Decorators, at-rules (often appear as .cp or .k in some lexers)
       ----------------------------------------------------------- */
.codehilite .cp {
  /* this sometimes is a "comment preproc" color in Pygments */
  color: #ed6f13;
  /* orange90 */
  font-weight: normal;
}

/* -----------------------------------------------------------
       Function names, class names, selectors
       (.nf, .nc, .nt in some lexers)
       ----------------------------------------------------------- */
.codehilite .nf {
  /* function name */
  color: #1c83e1;
  /* blue70 */
  font-weight: 800;
}

.codehilite .nc {
  /* class name */
  color: #1c83e1;
  font-weight: 800;
}

.codehilite .nt {
  /* selectors or tag names in some lexers */
  color: #1c83e1;
  font-weight: 800;
}


/* If you want italic for certain tokens */
.codehilite .i {
  /* italic text in some lexers */
  font-style: italic;
}

/* General styles for the message box */
.message {
  padding: 15px;
  margin: 10px 0;
  border-radius: 5px;
  font-family: Arial, sans-serif;
}

.message p {
  margin: 0;
  /* Remove extra space after paragraphs */
}

/* Error message styles */
.error {
  background-color: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
}

/* Warning message styles */
.warning {
  background-color: #fff3cd;
  color: #856404;
  border: 1px solid #ffeeba;
}

/* Styles for nodes with messages */
.react-flow__node:has(.has-messages) {
  border: 2px solid #cc0000;
}


.stop-sign {
  position: absolute;
  top: 50%;
  right: 50%;
  transform: translate(50%, -50%);
  opacity: 0.2;
  color: #cc0000;
  font-size: 4rem;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}